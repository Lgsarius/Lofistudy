"""Initial migration

Revision ID: 2852e75c1075
Revises: 
Create Date: 2024-02-12 22:12:16.456297

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2852e75c1075'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_table('role')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('checked', sa.Boolean(), nullable=True))
        batch_op.alter_column('pomodoro_time_count',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('fs_uniquifier',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=False)
        batch_op.drop_constraint('user_email_key', type_='unique')
        batch_op.drop_column('active')
        batch_op.drop_column('confirmed_at')
        batch_op.drop_column('email')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('user_email_key', ['email'])
        batch_op.alter_column('fs_uniquifier',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('pomodoro_time_count',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)
        batch_op.drop_column('checked')

    op.create_table('role',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('role_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='role_pkey'),
    sa.UniqueConstraint('name', name='role_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='roles_users_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='roles_users_user_id_fkey')
    )
    # ### end Alembic commands ###
